<?php

/**
 * Implements hook_cron().
 */
function file_checker_cron() {

  \Drupal::state()->set('file_checker.count',0);
  \Drupal::state()->set('file_checker.batch_pass',0);
  $result =  \Drupal::state()->get('file_checker.run_by_cron');
  //https://www.drupal.org/developing/api/8/configuration/simple
  $frequency_limit =\Drupal::service('config.factory')->getEditable('file_checker.frequency_limit')->get('frequency_limit');
  $last_run= \Drupal::state()->get('file_checker.last_run');
  $next_run = $last_run;
  if ($frequency_limit <> "None" && $frequency_limit <> "No limit") {
	  if ($frequency_limit == "1 hour") {
		  $next_run=$last_run + 3600;
	  }
	  elseif ($frequency_limit == "1 day") {
		  $next_run=$last_run + (24*3600);
	  }
	  elseif ($frequency_limit == "1 week")  {
		  $next_run=$last_run + (7*24*3600);
	  }
  }
  if ($result==1 && REQUEST_TIME > $next_run) {
    \Drupal::state()->set('file_checker.run_by','cron');
	$q = \Drupal::entityQuery('file');
    $r1 = $q->count()->execute();
    $uri_count=$r1;
	$first=0;
	$last=100;
	while($uri_count>$first) {
	  $result=array();
      $x=$first;
      while ($x<=$last) {
		$file=\Drupal::entityTypeManager()->getStorage('file')->load($x);
		$result[$file->uri->value]=$file->uri->value;
		$x=$x+1;
      }
      /**$q1 = db_query("SELECT uri  FROM file_managed where fid between ".$first ." and ".$last);
      $result=array();
      foreach($q1 as $r) {
      $result[$r->uri]=$r->uri;
      }*/
      $batch = array(
      'title' => t('Checking File Entity Exist...'),
      'operations' => array(
        array(
          '\Drupal\file_checker\FilesCheckBatch::check',
          array($result)
          ),
        ),
      'finished' => '\Drupal\file_checker\FilesCheckBatch::entityCheckFinishedCallback',
    );
    batch_set($batch);
    $first=$last+1;
    $last=$last+100;
    }
    \Drupal::state()->set('file_checker.last_run',REQUEST_TIME);
    \Drupal::logger('file_checker_'.\Drupal::state()->get('file_checker.run_by'))->notice('@variable: '.\Drupal::state()->get('file_checker.result'), array('@variable' => 'Media Missing ', ));
    \Drupal::state()->set('file_checker.result','');
  }
}
