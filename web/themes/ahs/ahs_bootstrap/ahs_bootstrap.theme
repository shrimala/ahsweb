<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Core\Url;

// Enable templates & hooks specific to a particular field in a particular
// view mode of a particular bundle of an particular entity
function ahs_bootstrap_theme_suggestions_field_alter(&$suggestions, $variables) {
  $suggestions[] = 'field__' .
    $variables['element']['#entity_type'] . '__' .
    $variables['element']['#field_name'] . '__' .
    (isset($variables['element']['#bundle']) ? $variables['element']['#bundle'] . '__': '') .
    $variables['element']['#view_mode'];

}

// Add discussion markers (e.g. new comments, private, etc.) to discussion nodes
// in teaser view mode
function ahs_bootstrap_preprocess_node__discussion__teaser(&$variables) {
  $variables['ahs_discussion_markers'] = [
    '#theme'=> 'ahs_discussion_markers',
    '#discussion' => $variables['node'],
    '#view_mode' => 'teaser',
  ];
}

// Add discussion markers (e.g. new comments, private, etc.) to discussion nodes
// in ahs_child view mode
function ahs_bootstrap_preprocess_node__discussion__ahs_child(&$variables) {
  $variables['ahs_discussion_markers'] = [
    '#theme'=> 'ahs_discussion_markers',
    '#discussion' => $variables['node'],
    '#view_mode' => 'teaser',
  ];
}

// In discussion comments format time comment created as elapsed time
function ahs_bootstrap_preprocess_comment__field_comments_with_changes(&$variables) {
  $comment = $variables['elements']['#comment'];
  $variables['created'] = \Drupal::service('date.formatter')->formatTimeDiffSince($comment->getCreatedTime(), ['granularity' => 1]);
}

// Add a header to EVA views displayed on entity display
function ahs_bootstrap_preprocess_eva_display_entity_view(&$variables) {
  $variables['title'] = [
    '#type' => 'html_tag',
    '#tag' => 'h2',
    '#value' => $variables['title'],
    '#attributes' => [
      'class' => [
        'view-eva-title',
      ],
    ],
  ];
}

// Link to the event's list of sessions, not its overview, in the parent view mode.
function ahs_bootstrap_preprocess_node__event__parent(&$variables) {
  $url = Url::fromRoute('ahs_events.online', array('node' => $variables['node']->id()));
  $variables['url'] = $url->toString();
}

// Add pencil & trash icons for editing & deleting comments
function ahs_bootstrap_preprocess_links__comment(&$variables) {
  // Remove reply link
  unset($variables['links']['comment-reply']);

  // Add the class used in the discussion form for placing side buttons
  $variables['attributes']['class'][] = 'ahs-edit-btn';

  if (isset($variables['links']['comment-edit'])) {
    // Move edit link to top
    $variables['links'] = array('comment-edit' => $variables['links']['comment-edit']) + $variables['links'];

    // Iconize the edit link
    $variables['links']['comment-edit']['link']['#icon'] = \Drupal\bootstrap\Bootstrap::glyphicon('pencil');
    $variables['links']['comment-edit']['link']['#icon_only'] = TRUE;
    $variables['links']['comment-edit']['link']['#attributes']['class'] = [
      'btn',
      'btn-sm',
      'btn-default',
    ];
  }

  if (isset($variables['links']['comment-delete'])) {
    // Iconize the delete link
    $variables['links']['comment-delete']['link']['#icon'] = \Drupal\bootstrap\Bootstrap::glyphicon('trash');
    $variables['links']['comment-delete']['link']['#icon_only'] = TRUE;
    $variables['links']['comment-delete']['link']['#attributes']['class'] = [
      'btn',
      'btn-sm',
      'btn-default',
    ];
  }
}

/**
 * Hide local tasks tabs when viewing discussions.
 * This could maybe be done using the Block layout UI, but it's difficult to
 * hide on discussions without also hiding on comments.
 * Implements theme_preprocess_block().
 */
function ahs_bootstrap_preprocess_block(&$variables) {
  switch ($variables['plugin_id']) {

    case 'local_tasks_block':
      $node = \Drupal::routeMatch()->getParameter('node');
      if ($node && $node->getType() == 'discussion') {
        $variables['content'] = [];
      }
    
    case 'system_menu_block:account':
      $variables['#cache']['contexts'][] = 'user';
  }
}
